/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : TRIGER.h
**     Project     : ProcessorExpert
**     Processor   : MKL25Z128VLK4
**     Component   : BitsIO
**     Version     : Component 02.108, Driver 01.00, CPU db: 3.00.000
**     Compiler    : GNU C Compiler
**     Date/Time   : 2022-10-18, 17:08, # CodeGen: 4
**     Abstract    :
**         This component "BitsIO" implements a multi-bit input/output.
**         It uses selected pins of one 1-bit to 8-bit port.
**         Note: This component is set to work in Output direction only.
**     Settings    :
**         Port name                   : PTD
**
**         Bit mask of the port        : 0x001E
**         Number of bits/pins         : 4
**         Single bit numbers          : 0 to 3
**         Values range                : 0 to 15
**
**         Initial direction           : Output (direction cannot be changed)
**         Initial output value        : 0 = 000H
**         Initial pull option         : off
**
**         Port data register          : GPIOD_PDOR [0x400FF0C0]
**         Port control register       : GPIOD_PDDR [0x400FF0D4]
**
**             ----------------------------------------------------
**                   Bit     |   Pin   |   Name
**             ----------------------------------------------------
**                    0      |    74   |   ADC0_SE5b/PTD1/SPI0_SCK/TPM0_CH1
**                    1      |    75   |   PTD2/SPI0_MOSI/UART2_RX/TPM0_CH2/SPI0_MISO
**                    2      |    76   |   PTD3/SPI0_MISO/UART2_TX/TPM0_CH3/SPI0_MOSI
**                    3      |    77   |   PTD4/LLWU_P14/SPI1_PCS0/UART2_RX/TPM0_CH4
**             ----------------------------------------------------
**
**         Optimization for            : speed
**     Contents    :
**         GetDir - bool TRIGER_GetDir(void);
**         GetVal - byte TRIGER_GetVal(void);
**         PutVal - void TRIGER_PutVal(byte Val);
**         GetBit - bool TRIGER_GetBit(byte Bit);
**         PutBit - void TRIGER_PutBit(byte Bit, bool Val);
**         SetBit - void TRIGER_SetBit(byte Bit);
**         ClrBit - void TRIGER_ClrBit(byte Bit);
**         NegBit - void TRIGER_NegBit(byte Bit);
**
**Copyright : 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
**SOURCE DISTRIBUTION PERMISSIBLE as directed in End User License Agreement.
**
**http      : www.freescale.com
**mail      : support@freescale.com
** ###################################################################*/
/*!
** @file TRIGER.h
** @version 01.00
** @brief
**         This component "BitsIO" implements a multi-bit input/output.
**         It uses selected pins of one 1-bit to 8-bit port.
**         Note: This component is set to work in Output direction only.
*/         
/*!
**  @addtogroup TRIGER_module TRIGER module documentation
**  @{
*/         

#ifndef __TRIGER_H
#define __TRIGER_H

/* MODULE TRIGER. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */
#include "BitsIoLdd2.h"

#include "Cpu.h"

#ifdef __cplusplus
extern "C" {
#endif 




/*
** ===================================================================
**     Method      :  TRIGER_GetDir (component BitsIO)
**     Description :
**         This method returns direction of the component.
**     Parameters  : None
**     Returns     :
**         ---        - Direction of the component (always <true>, Output only)
**                      <false> = Input, <true> = Output
** ===================================================================
*/
#define TRIGER_GetDir() (BitsIoLdd2_GetDir(BitsIoLdd2_DeviceData))

/*
** ===================================================================
**     Method      :  TRIGER_GetVal (component BitsIO)
**     Description :
**         This method returns an input value.
**           a) direction = Input  : reads the input value from the
**                                   pins and returns it
**           b) direction = Output : returns the last written value
**         Note: This component is set to work in Output direction only.
**     Parameters  : None
**     Returns     :
**         ---        - Input value (0 to 15)
** ===================================================================
*/
#define TRIGER_GetVal() ((byte)BitsIoLdd2_GetVal(BitsIoLdd2_DeviceData))

/*
** ===================================================================
**     Method      :  TRIGER_PutVal (component BitsIO)
**     Description :
**         This method writes the new output value.
**     Parameters  :
**         NAME       - DESCRIPTION
**         Val        - Output value (0 to 15)
**     Returns     : Nothing
** ===================================================================
*/
#define TRIGER_PutVal(Val) (BitsIoLdd2_PutVal(BitsIoLdd2_DeviceData, ((dword)(Val))))

bool TRIGER_GetBit(byte Bit);
/*
** ===================================================================
**     Method      :  TRIGER_GetBit (component BitsIO)
**     Description :
**         This method returns the specified bit of the input value.
**           a) direction = Input  : reads the input value from pins
**                                   and returns the specified bit
**           b) direction = Output : returns the specified bit
**                                   of the last written value
**         Note: This component is set to work in Output direction only.
**     Parameters  :
**         NAME       - DESCRIPTION
**         Bit        - Number of the bit to read (0 to 3)
**     Returns     :
**         ---        - Value of the specified bit (FALSE or TRUE)
**                      FALSE = "0" or "Low", TRUE = "1" or "High"
** ===================================================================
*/

/*
** ===================================================================
**     Method      :  TRIGER_PutBit (component BitsIO)
**     Description :
**         This method writes the new value to the specified bit
**         of the output value.
**     Parameters  :
**         NAME       - DESCRIPTION
**         Bit        - Number of the bit (0 to 3)
**         Val        - New value of the bit (FALSE or TRUE)
**                      FALSE = "0" or "Low", TRUE = "1" or "High"
**     Returns     : Nothing
** ===================================================================
*/
#define TRIGER_PutBit(Bit,Val) ((void)BitsIoLdd2_PutBit(BitsIoLdd2_DeviceData, (Bit), (Val)))

/*
** ===================================================================
**     Method      :  TRIGER_SetBit (component BitsIO)
**     Description :
**         This method sets (sets to one) the specified bit of the
**         output value.
**         [ It is the same as "PutBit(Bit,TRUE);" ]
**     Parameters  :
**         NAME       - DESCRIPTION
**         Bit        - Number of the bit to set (0 to 3)
**     Returns     : Nothing
** ===================================================================
*/
#define TRIGER_SetBit(Bit) ((void)BitsIoLdd2_SetBit(BitsIoLdd2_DeviceData, (Bit)))

/*
** ===================================================================
**     Method      :  TRIGER_ClrBit (component BitsIO)
**     Description :
**         This method clears (sets to zero) the specified bit
**         of the output value.
**         [ It is the same as "PutBit(Bit,FALSE);" ]
**     Parameters  :
**         NAME       - DESCRIPTION
**         Bit        - Number of the bit to clear (0 to 3)
**     Returns     : Nothing
** ===================================================================
*/
#define TRIGER_ClrBit(Bit) ((void)BitsIoLdd2_ClrBit(BitsIoLdd2_DeviceData, (Bit)))

/*
** ===================================================================
**     Method      :  TRIGER_NegBit (component BitsIO)
**     Description :
**         This method negates (inverts) the specified bit of the
**         output value.
**     Parameters  :
**         NAME       - DESCRIPTION
**         Bit        - Number of the bit to invert (0 to 31)
**     Returns     : Nothing
** ===================================================================
*/
#define TRIGER_NegBit(Bit) ((void)BitsIoLdd2_NegBit(BitsIoLdd2_DeviceData, (Bit)))

/* END TRIGER. */

#ifdef __cplusplus
}  /* extern "C" */
#endif 

#endif 
/* ifndef __TRIGER_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.08]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
